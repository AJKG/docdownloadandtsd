package com.yodlee.docdownloadandtsd.Services;/** * Copyright (c) 2019 Yodlee Inc. All Rights Reserved. * * This software is the confidential and proprietary information of Yodlee, Inc. * Use is subject to license terms. * */import com.fasterxml.jackson.core.JsonFactory;import com.fasterxml.jackson.core.JsonParseException;import com.fasterxml.jackson.core.JsonParser;import com.fasterxml.jackson.databind.JsonNode;import com.fasterxml.jackson.databind.ObjectMapper;import com.yodlee.docdownloadandtsd.authenticator.Authorization;import org.springframework.beans.factory.annotation.Value;import org.springframework.http.HttpEntity;import org.springframework.http.HttpHeaders;import org.springframework.http.MediaType;import org.springframework.stereotype.Service;import org.springframework.web.client.RestTemplate;import javax.inject.Inject;import java.io.IOException;import java.util.HashMap;import java.util.Map;@Servicepublic class HammerAuthenticationService {	@Value("${hammer.UserId}")	private String hammerUserName;	@Value("${hammer.Password}")	private String hammerPassword;	@Value("${hammer.url}")	private String hammerLoginUrl;	@Inject	Authorization authorization;	public String getProdVersions(String agent) throws JsonParseException, IOException {		HammerAuthenticationService hammerService = new HammerAuthenticationService();		String token = hammerService.generateToken(hammerUserName, hammerPassword);		HttpHeaders header = hammerService.getHeader(token);		RestTemplate restTemplate = new RestTemplate();		// restTemplate.setErrorHandler(new ToolsResponseHandler());		Map<String, String> message = new HashMap<String, String>();		message.put("agentName", agent.trim());		String ttrWBURL = "https://firemem.tools.yodlee.com/hammer/R/ADT/AD";		HttpEntity<Map<String, String>> requestEntity = new HttpEntity<Map<String, String>>(message, header);		String response = restTemplate.postForObject(ttrWBURL, requestEntity, String.class);		return response;	}	public String generateToken(String userName, String password) throws JsonParseException, IOException {		RestTemplate restTemplate = new RestTemplate();		password = authorization.decrypt(password);		HttpHeaders headers = new HttpHeaders();		headers.setContentType(MediaType.APPLICATION_JSON);		Map<String, String> map = new HashMap<>();		map.put("username", userName);		map.put("password", password);		String yadAuthenticationURL = "https://firemem.tools.yodlee.com/hammer/R/A/L";		HttpEntity<Map<String, String>> request = new HttpEntity<Map<String, String>>(map, headers);		// System.out.println("HammerAuthenticationService :		// request"+request.getBody());		System.out.println("HammerAuthenticationService : URL" + yadAuthenticationURL);		String response = restTemplate.postForObject(yadAuthenticationURL, request, String.class);		ObjectMapper mapper = new ObjectMapper();		JsonFactory factory = mapper.getFactory();		JsonParser parser = factory.createParser(response);		JsonNode actualObj = mapper.readTree(parser);//		System.out.println("HammerAuthenticationService : >>>response :" + actualObj);		String token = actualObj.get("token").toString();		token = "Bearer " + token.replaceAll("\"", "");		return token;	}	public HttpHeaders getHeader(String token) {		HttpHeaders header = new HttpHeaders();		header.set("Content-Type", "application/json");		header.set("Authorization", token);		return header;	}}