package com.yodlee.docdownloadandtsd.Services;/** * Copyright (c) 2019 Yodlee Inc. All Rights Reserved. * * This software is the confidential and proprietary information of Yodlee, Inc. * Use is subject to license terms. * */import com.fasterxml.jackson.core.JsonFactory;import com.fasterxml.jackson.core.JsonParseException;import com.fasterxml.jackson.core.JsonParser;import com.fasterxml.jackson.databind.JsonNode;import com.fasterxml.jackson.databind.ObjectMapper;import com.yodlee.docdownloadandtsd.authenticator.Authorization;import org.json.JSONArray;import org.json.JSONObject;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.http.HttpEntity;import org.springframework.http.HttpHeaders;import org.springframework.http.MediaType;import org.springframework.stereotype.Service;import org.springframework.web.client.RestTemplate;import java.io.IOException;import java.util.HashMap;import java.util.Map;@Servicepublic class YuvaGatewayImpl {	final static org.slf4j.Logger logger = LoggerFactory.getLogger(YuvaGatewayImpl.class);	@Value("${yuva.url}")	private String REST_YUVA_URL;	@Autowired	private Authorization authorization;	@Value("${yuva.UserId}")	private String USERNAME_VALUE;	@Value("${yuva.Password}")	private String PASSWORD_VALUE;	private RestTemplate restTemplate = new RestTemplate();	public String getYuvaSegmentUsers(String agentName, String suminfo) throws Exception {		String accessToken = getTokenId(USERNAME_VALUE, PASSWORD_VALUE);		String response = null;		JSONArray userDetailsArray = new JSONArray();		if (null != accessToken) {			HttpHeaders headers = new HttpHeaders();			headers.setContentType(MediaType.APPLICATION_JSON);			headers.set("Authorization", accessToken);			Map<String, Object> request = new HashMap<String, Object>();			request.put("agentName", agentName.trim());			request.put("refreshType", "JDAP");			request.put("sumInfoId", suminfo.trim());			System.out.println(request);			System.out.println(REST_YUVA_URL);			HttpEntity requestEntity = new HttpEntity<>(request, headers);			response = restTemplate.postForObject(REST_YUVA_URL, requestEntity, String.class);			logger.info("..resposne of new YUVA API : "+response);			if(response.contains("There are no users present for the given search criteria")) {				System.out.println("There are no users present for the given search criteria in YUVA.");				return "";			}			JSONObject jsonDataIn = new JSONObject(response);			JSONArray stateArray = jsonDataIn.getJSONArray("result").getJSONObject(0).getJSONArray("states");			for (int i = 0; i < stateArray.length(); i++) {				JSONObject stateObj = stateArray.getJSONObject(i);				JSONArray userArray = stateObj.getJSONArray("users").getJSONArray(0);				System.out.println(userArray.toString());				for (int j = 0; j < userArray.length(); j++) {					JSONObject userObj = userArray.getJSONObject(j);					if(userObj.has("cacheItemID")) {						String cii = userObj.get("cacheItemID").toString();						String cobrandId = userObj.get("cobrandId").toString();						JSONObject user_obj = new JSONObject();						user_obj.put("cacheItemID", cii);						user_obj.put("cobrandId", cobrandId);						userDetailsArray.put(user_obj);					}				}			}		}		return userDetailsArray.toString();	}	private String getTokenId(String username, String password) throws JsonParseException, IOException {		RestTemplate restTemplate = new RestTemplate();		password = authorization.decrypt(password);		HttpHeaders headers = new HttpHeaders();		headers.setContentType(MediaType.APPLICATION_JSON);		Map<String, String> map = new HashMap<>();		map.put("username", username);		map.put("password", password);		String yuvaAuthenticationURL = "https://yuva.orphic.yodlee.com/R/A/L";		HttpEntity<Map<String, String>> request = new HttpEntity<Map<String, String>>(map, headers);		System.out.println("YuvaAuthenticationService : URL" + yuvaAuthenticationURL);		String response = restTemplate.postForObject(yuvaAuthenticationURL, request, String.class);		ObjectMapper mapper = new ObjectMapper();		JsonFactory factory = mapper.getFactory();		JsonParser parser = factory.createParser(response);		JsonNode actualObj = mapper.readTree(parser);		System.out.println("YuvaAuthenticationService : >>>response :" + actualObj);		String token = actualObj.get("token").toString();		System.out.println("token is " + token);		token = token.replaceAll("\"", "");		return token;	}}